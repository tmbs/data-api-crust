import { ColumnMetadata, Field } from "@aws-sdk/client-rds-data";
import { describe, it, expect, test } from "vitest";
import { parse, _parseBooleanField, _parseIntegerField } from "../src/crust";

describe.concurrent("parse()", () => {
    // FIXME: enforce type?
    const tests = [
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: true,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "s",
                name: "s",
                nullable: 0,
                precision: 20,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -5,
                // FIXME: SERIAL
                typeName: "BIGINT UNSIGNED",
            },
            field: { stringValue: "1" },
            expected: [{ s: "1" }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "b",
                name: "b",
                nullable: 1,
                precision: 2,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -7,
                typeName: "BIT",
            },
            field: { booleanValue: true },
            // FIXME: see MySQL insert value
            expected: [{ b: true }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "t",
                name: "t",
                nullable: 1,
                precision: 3,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -6,
                typeName: "TINYINT",
            },
            field: { stringValue: "-3" },
            expected: [{ t: -3 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "tu",
                name: "tu",
                nullable: 1,
                precision: 3,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -6,
                typeName: "TINYINT UNSIGNED",
            },
            field: { stringValue: "4" },
            expected: [{ tu: 4 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "bo",
                name: "bo",
                nullable: 1,
                precision: 1,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -7,
                typeName: "BIT",
            },
            field: { booleanValue: false },
            expected: [{ bo: false }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "sm",
                name: "sm",
                nullable: 1,
                precision: 5,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 5,
                typeName: "SMALLINT",
            },
            field: { stringValue: "-5" },
            expected: [{ sm: -5 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "smu",
                name: "smu",
                nullable: 1,
                precision: 5,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 5,
                typeName: "SMALLINT UNSIGNED",
            },
            field: { stringValue: "6" },
            expected: [{ smu: 6 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "m",
                name: "m",
                nullable: 1,
                precision: 7,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 4,
                typeName: "MEDIUMINT",
            },
            field: { stringValue: "-7" },
            expected: [{ m: -7 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "mu",
                name: "mu",
                nullable: 1,
                precision: 8,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 4,
                typeName: "MEDIUMINT UNSIGNED",
            },
            field: { stringValue: "7" },
            expected: [{ mu: 7 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "i",
                name: "i",
                nullable: 1,
                precision: 10,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 4,
                typeName: "INT",
            },
            field: { stringValue: "-8" },
            expected: [{ i: -8 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "iu",
                name: "iu",
                nullable: 1,
                precision: 10,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 4,
                typeName: "INT UNSIGNED",
            },
            field: { stringValue: "8" },
            expected: [{ iu: 8 }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "bi",
                name: "bi",
                nullable: 1,
                precision: 19,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -5,
                typeName: "BIGINT",
            },
            field: { stringValue: "-9" },
            expected: [{ bi: BigInt(-9) }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "biu",
                name: "biu",
                nullable: 1,
                precision: 20,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -5,
                typeName: "BIGINT UNSIGNED",
            },
            field: { stringValue: "9" },
            expected: [{ biu: BigInt(9) }],
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: true,
                isCurrency: false,
                isSigned: true,
                label: "d",
                name: "d",
                nullable: 1,
                precision: 10,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 3,
                typeName: "DECIMAL",
            },
            field: { stringValue: "0" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: true,
                isCurrency: false,
                isSigned: false,
                label: "du",
                name: "du",
                nullable: 1,
                precision: 10,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 3,
                typeName: "DECIMAL UNSIGNED",
            },
            field: { stringValue: "0" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "f",
                name: "f",
                nullable: 1,
                precision: 12,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 7,
                typeName: "FLOAT",
            },
            field: { doubleValue: -0.2 },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "fu",
                name: "fu",
                nullable: 1,
                precision: 12,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 7,
                typeName: "FLOAT UNSIGNED",
            },
            field: { doubleValue: 0.2 },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: true,
                label: "do",
                name: "do",
                nullable: 1,
                precision: 22,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 8,
                typeName: "DOUBLE",
            },
            field: { doubleValue: -0.3 },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "dou",
                name: "dou",
                nullable: 1,
                precision: 22,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 8,
                typeName: "DOUBLE UNSIGNED",
            },
            field: { doubleValue: 0.3 },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "da",
                name: "da",
                nullable: 1,
                precision: 10,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 91,
                typeName: "DATE",
            },
            field: { stringValue: "2023-02-24" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "dat",
                name: "dat",
                nullable: 1,
                precision: 19,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 93,
                typeName: "DATETIME",
            },
            field: { stringValue: "2023-02-24 15:17:48" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "ti",
                name: "ti",
                nullable: 1,
                precision: 19,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 93,
                typeName: "TIMESTAMP",
            },
            field: { stringValue: "2023-02-24 15:17:48" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "tim",
                name: "tim",
                nullable: 1,
                precision: 10,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 92,
                typeName: "TIME",
            },
            field: { stringValue: "15:17:48" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: false,
                isCurrency: false,
                isSigned: false,
                label: "y",
                name: "y",
                nullable: 1,
                precision: 4,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 91,
                typeName: "YEAR",
            },
            field: { stringValue: "2023-01-01" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: true,
                isCurrency: false,
                isSigned: false,
                label: "v",
                name: "v",
                nullable: 1,
                precision: 32,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 12,
                typeName: "VARCHAR",
            },
            field: { stringValue: "foo" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: true,
                isCurrency: false,
                isSigned: false,
                label: "te",
                name: "te",
                nullable: 1,
                precision: 21845,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -1,
                typeName: "TEXT",
            },
            field: { stringValue: "bar" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: true,
                isCurrency: false,
                isSigned: false,
                label: "e",
                name: "e",
                nullable: 1,
                precision: 1,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: 1,
                typeName: "CHAR",
            },
            field: { stringValue: "A" },
            expected: {},
        },
        {
            column: {
                arrayBaseColumnType: 0,
                isAutoIncrement: false,
                isCaseSensitive: true,
                isCurrency: false,
                isSigned: false,
                label: "j",
                name: "j",
                nullable: 1,
                precision: 2147483647,
                scale: 0,
                schemaName: "",
                tableName: "reference",
                type: -1,
                typeName: "JSON",
            },
            field: { stringValue: '{"foo": {"bar": "baz"}}' },
            expected: [{ j: { foo: { bar: "baz" } } }],
        },
    ];

    for (const test of tests) {
        it(test.column.typeName, () => {
            expect(parse([test.column], [[test.field]])).toEqual(test.expected);
        });
    }
});
